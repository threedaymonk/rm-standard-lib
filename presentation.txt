# vim: syntax=ruby

# Secrets of the standard library

###

# Forwardable

###

class Event < ActiveRecord::Base
  belongs_to :opportunity
end

opportunity.organization  #  :-)
event.opportunity  #  :-)
event.opportunity.organization  #  :-(

###

class Event < ActiveRecord::Base
  belongs_to :opportunity

  def organization
    opportunity.organization
  end
end

event.organization

###

require "forwardable"
class Event < ActiveRecord::Base
  extend Forwardable
  belongs_to :opportunity

  def_delegators :opportunity, :organization # , ... more methods ...
  def_delegator :opportunity, :organization, :opportunity_organization
end

event.organization
event.opportunity_organization

###

class Opportunity < ActiveRecord::Base
  validates_presence_of :name
  alias title name
end

# => NameError: undefined method `name' for class `Opportunity'

###

class Opportunity < ActiveRecord::Base
  validates_presence_of :name
  alias_method :title, :name
end

# => in `alias_method':NameError: undefined method `name' for class `Opportunity'

###

require "forwardable"
class Opportunity < ActiveRecord::Base
  extend Forwardable
  validates_presence_of :name
  def_delegator :self, :name, :title
end

opportunity.title

###

# open

###

# A file

open("somefile.txt", "w") do |f|
  f.puts "Hello"
end

###

# A URI

require "open-uri"
sample = open("http://google.co.uk"){ |f| f.read(1024) }

###

# A program!

open("|less", "w") do |f|
  80.times do
    f.puts "some output"
  end
end

###

# open3

###

require "open3"
stdin, stdout, stderr = Open3.popen3("php")
stdin.puts "<? echo 'hello cruel world'; ?>"
stdin.close
stdout.read
# => "hello cruel world"

###

# Array#assoc and rassoc

###

data = [["cat",  "kitten", "feline"],
        ["dog",  "puppy",  "canine"],
        ["bear", "cub",    "ursine"]]
data.assoc("dog")
# => ["dog", "puppy", "canine"]
data.rassoc("kitten")
# => ["cat",  "kitten", "feline"]

###

# pack/unpack

###

# QT/MPEG4 atom header

length, name = @io.read(8).unpack("Na4")

header = [1234, "moov"].pack("Na4")
## => "\000\000\004\322moov"

###

# UTF-8

codepoints = "string".unpack("U*")
# => [115, 116, 114, 105, 110, 103]

em_dash = [0x2014].pack("U")
# => "â€”"

###

# Set

###

# Soap

###

require "soap/wsdlDriver"
soap = SOAP::WSDLDriverFactory.new(wsdl_url).create_rpc_driver
result = soap.someRemoteMethod("paramName" => 99)

####

# Tempfile

###

# pp

###
